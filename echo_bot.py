# This is a simple echo bot using the decorator mechanism.
# It echoes any incoming text messages.

import telebot
from tokens \
    import *
import random
import logging
from datetime import datetime
import sqlite3
from telebot import types

logging.basicConfig(filename="logs/tele_bot.log", level=logging.INFO)

setmessage = []
viewstatic = []
inlk = []

userchatid = []
adminchatid = []
graphstart = datetime.now()

stopmarkup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
stopmarkup.add('–•–≤–∞—Ç–∏—Ç')

elementmarkup_unreg = types.ReplyKeyboardMarkup(one_time_keyboard=False)
elementmarkup_unreg.add('–ü—Ä–æ –Ω–∞—Å', '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–æ—Ç–∞')

elementmarkup_soc = types.InlineKeyboardMarkup()
callback_button = types.InlineKeyboardButton(text="Instagram", url="https://www.instagram.com/element_show/")
elementmarkup_soc.add(callback_button)
callback_button = types.InlineKeyboardButton(text="–í–ö–æ–Ω—Ç–∞–∫—Ç–µ", url="https://vk.com/club92907131")
elementmarkup_soc.add(callback_button)
callback_button = types.InlineKeyboardButton(text="–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç", url="http://deliriumshow.com/")
elementmarkup_soc.add(callback_button)

adminmarkup = types.ReplyKeyboardMarkup(one_time_keyboard=False)
adminmarkup.add('–ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')

staticmarkup = types.ReplyKeyboardMarkup(one_time_keyboard=False)
staticmarkup.add('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', '–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –±–æ—Ç–∞', '–ù–∞–∑–∞–¥')

yn_markup = types.ReplyKeyboardMarkup(one_time_keyboard=False)
yn_markup.add('–î–∞', '–ù–µ—Ç', '–•–≤–∞—Ç–∏—Ç')

yn_only_markup = types.ReplyKeyboardMarkup(one_time_keyboard=False)
yn_only_markup.add('–î–∞', '–ù–µ—Ç')

elementmarkup_reg = types.ReplyKeyboardMarkup(one_time_keyboard=False)
elementmarkup_reg.add('–ü—Ä–æ –Ω–∞—Å', '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', 'Proxy –¥–ª—è –ª—é–±–∏–º–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞', '–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –±–æ—Ç–∞')

elementmarkup_unreg = types.ReplyKeyboardMarkup(one_time_keyboard=False)
elementmarkup_unreg.add('–ü—Ä–æ –Ω–∞—Å', '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–æ—Ç–∞')

elementmarkup_lk = types.ReplyKeyboardMarkup(one_time_keyboard=False)
elementmarkup_lk.add('–ó–∞–∫–∞–∑–∞—Ç—å –ø—Ä–∞–π—Å–ª–∏—Å—Ç', '–ù–∞–∑–∞–¥')

conn = sqlite3.connect("mydatabase.db")
cursor = conn.cursor()
for row in cursor.execute("select chat_id from chats where status = 2;"):
    adminchatid.append(float(row[0]))
conn.close()

conn = sqlite3.connect("mydatabase.db")
cursor = conn.cursor()
for row in cursor.execute("select chat_id from chats where status = 1;"):
    userchatid.append(float(row[0]))
conn.close()


def clearall(chat_id):
    if chat_id in setmessage:
        setmessage.remove(chat_id)
    if chat_id in viewstatic:
        viewstatic.remove(chat_id)


def RepresentsInt(s):
    try:
        int(s)
        return True
    except ValueError:
        return False


def hello(name):
    phrase = ['–ü—Ä–∏–≤–µ—Ç, ', '–î–æ–±—Ä—ã–π –¥–µ–Ω—å, ', '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ', '–ê–ª–ª–æ—Ö–∞, ']
    i = random.randint(0, 3)
    result = phrase[i] + name + "!"
    return result


bot = telebot.TeleBot(telegrambot)


# Handle '/start' and '/help'
@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –°–ø—Ä–∞–≤—à–∏–≤–∞–π, —è —Ä–∞—Å—Å–∫–∞–∂—É")


# Handle all other messages with content_type 'text' (content_types defaults to ['text'])
@bot.message_handler(func=lambda message: True)
def echo_message(message):
    content_type = str(message.content_type)
    chat_type = str(message.chat.type)
    chat_id = float(message.chat.id)

    if chat_id in adminchatid:
        logging.info("Incoming message on admin chat" + str(message) + " time:" + str(datetime.now()))
    else:
        logging.info("Incoming message on public chat" + str(message) + " time:" + str(datetime.now()))
    if content_type == 'text':
        text = str(message.text)
        bot.send_chat_action(chat_id, 'typing')
        if chat_id in adminchatid:
            if chat_id not in setmessage and chat_id not in viewstatic:
                if text == '–ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞':
                    setmessage.append(chat_id)
                    bot.send_message(chat_id, "–ö–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å?", reply_markup=stopmarkup)
                elif text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
                    viewstatic.append(chat_id)
                    bot.send_message(chat_id, "–°–º–æ—Ç—Ä–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", reply_markup=staticmarkup)
            if chat_id in setmessage:
                if text == '–•–≤–∞—Ç–∏—Ç':
                    setmessage.remove(chat_id)
                    bot.send_message(chat_id, "–í—Å—ë –∑–∞–∫–æ–Ω—á–∏–ª", reply_markup=adminmarkup)
                elif text != '–ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞':
                    setmessage.remove(chat_id)
                    k = 0
                    conn = sqlite3.connect("mydatabase.db")
                    cursor = conn.cursor()
                    for row in cursor.execute("select chat_id, name from chats where status = 1"):
                        bot.send_message(row[0], hello(row[1]) + "\n\n" + text,
                                         parse_mode='MARKDOWN', disable_web_page_preview=True)
                        k = k + 1
                    conn.close()
                    bot.send_message(chat_id, "–û—Ç–ø—Ä–∞–≤–∏–ª *" + str(k) + "* —Å–æ–æ–±—â–µ–Ω–∏–π, "
                                                                      "–ø—Ä–æ–¥–æ–ª–∂–∏–º...",
                                     parse_mode='MARKDOWN', reply_markup=adminmarkup)
            if chat_id in viewstatic:
                if text == '–ù–∞–∑–∞–¥':
                    viewstatic.remove(chat_id)
                    bot.send_message(chat_id, "–í–µ—Ä–Ω—É–ª–∏—Å—å", reply_markup=adminmarkup)
                elif text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞':
                    bot.send_message(chat_id, 'reply', disable_web_page_preview=True)
                elif text == '–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –±–æ—Ç–∞':
                    message = '*–ù–∞ –º–µ–Ω—è –ø–æ–¥–ø–∏—Å–∞–Ω–æ:*\n'
                    conn = sqlite3.connect("mydatabase.db")
                    cursor = conn.cursor()
                    for row in cursor.execute(
                            "select (case when status = 0 then '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' "
                            "when status = 1 then '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' "
                            "else '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤' end) as label,count(chat_id) from chats group by label;"):
                        message = message + str(row[0]) + ": *" + str(row[1]) + "*\n"
                    conn.close()
                    bot.send_message(chat_id, message, parse_mode='MARKDOWN')
        else:
            if chat_id in userchatid:
                if chat_id in inlk:
                    if text == "–ó–∞–∫–∞–∑–∞—Ç—å –ø—Ä–∞–π—Å–ª–∏—Å—Ç":
                        try:
                            f = open('/root/bot_tele/etc/list.xml', 'rb', )
                            bot.send_document(chat_id, f)
                        except:
                            bot.send_message(chat_id, '–ü—Ä–∏–Ω–æ—à—É —Å–≤–æ–∏ –∏–∑–º–∏–Ω–µ–Ω–∏—è, —É –º–µ–Ω—è –Ω–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∞–π—Å–∞! \n'
                                                      '–ù–æ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ, —è —É–∂–µ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!')
                            for admin_chat_id in adminchatid:
                                try:
                                    bot.send_chat_action(admin_chat_id, 'typing')
                                    bot.send_message(admin_chat_id, "–ö–ª–∏–µ–Ω—Ç –∑–∞–ø—Ä–æ—Å–∏–ª –ø—Ä–∞–π—Å, –∞ —Ñ–∞–π–ª–∞ —É –±–æ—Ç–∞ –Ω–µ—Ç")
                                    bot.forward_message(admin_chat_id, chat_id, message.message_id)
                                except:
                                    print("–•–º-–º")
                    if text == '–ù–∞–∑–∞–¥':
                        inlk.remove(chat_id)
                        bot.send_message(chat_id, "–í–µ—Ä–Ω—É–ª–∏—Å—å", reply_markup=elementmarkup_reg)
                else:
                    if text == "–ü—Ä–æ –Ω–∞—Å":
                        bot.send_message(chat_id,
                                         "–ê—Ä—Ç-–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è ELEMENT\n\n–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —à–æ—É –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –∞–Ω–∏–º–∞—Ü–∏—è –Ω–∞"
                                         " –ª—é–±–æ–µ —Ç–æ—Ä–∂–µ—Å—Ç–≤–æ. –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ, —è—Ä–∫–∏–µ, –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–µ—Å—è!\n\nüî•    –û–≥–Ω–µ–Ω–Ω–æ–µ "
                                         "—à–æ—É\nüí°    –°–≤–µ—Ç–æ–¥–∏–æ–¥–Ω–æ–µ —à–æ—É\n ‚ö°Ô∏è   –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ —à–æ—É\n üí®   –®–æ—É –í–µ—Ç"
                                         "—Ä–∞\n üî¶   –ü—Ä–æ–µ–∫—Ü–∏–æ–Ω–Ω–æ–µ —à–æ—É\nüö®    –ü–∏–∫—Å–µ–ª—å–Ω–æ–µ —à–æ—É\nüéÄ    –®–æ—É –≥–∏–º–Ω–∞—Å—Ç–æ"
                                         "–∫\nüîÆ    –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –∂–æ–Ω–≥–ª–∏—Ä–æ–≤–∞–Ω–∏–µ\nüé™    –•–æ–¥—É–ª–∏—Å—Ç—ã, –º–∏–º—ã, –∂–æ–Ω–≥–ª–µ—Ä—ã, –ª–µ–¥–∏"
                                         "-—Ñ—É—Ä—à–µ—Ç, –∂–∏–≤—ã–µ —Å—Ç–∞—Ç—É–∏",
                                         reply_markup=elementmarkup_soc)
                    elif text == "Proxy –¥–ª—è –ª—é–±–∏–º–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞":
                        bot.send_message(chat_id,
                                         "[–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Proxy](https://t.me/socks?server=195.201.136.255&"
                                         "port=1080&user=element_89179024466&pass=*****)",
                                         parse_mode='MARKDOWN', reply_markup=elementmarkup_reg)
                    elif text == '–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –±–æ—Ç–∞':
                        userchatid.remove(chat_id)
                        if str(message.chat.first_name):
                            name = str(message.chat.first_name)
                        else:
                            name = str(message.chat.id)
                        conn = sqlite3.connect("mydatabase.db")
                        cursor = conn.cursor()
                        cursor.execute("update chats set status = 0, name = '" + name + "' "
                                                                                        "where "
                                                                                        "chat_id = "
                                                                                        "'" + str(chat_id) + "';")
                        conn.commit()
                        conn.close()
                        bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –±—ã–ª–∏ —Å –Ω–∞–º–∏!",
                                         reply_markup=elementmarkup_unreg)
                    elif text == "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç":
                        inlk.append(chat_id)
                        bot.send_message(chat_id, "–í–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", reply_markup=elementmarkup_lk)
            else:
                if text == '/start':
                    try:
                        conn = sqlite3.connect("mydatabase.db")
                        cursor = conn.cursor()
                        cursor.execute("INSERT INTO chats(chat_id) VALUES (?);", (str(chat_id),))
                        conn.commit()
                        conn.close()
                        bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –°–ø—Ä–∞–≤—à–∏–≤–∞–π, —è —Ä–∞—Å—Å–∫–∞–∂—É", reply_markup=elementmarkup_unreg)
                    except:
                        bot.send_message(chat_id, "–ü–æ–∫–∞ –≤—Å—ë –ø–ª–æ—Ö–æ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                elif text == '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–æ—Ç–∞':
                    if chat_type == 'private':
                        userchatid.append(chat_id)
                        if str(message.chat.first_name):
                            name = str(message.chat.first_name)
                        else:
                            name = str(message.chat.id)
                        conn = sqlite3.connect("mydatabase.db")
                        cursor = conn.cursor()
                        cursor.execute("update chats set status = 1, "
                                       "name = '" + name + "' where chat_id = '" + str(chat_id) + "';")
                        conn.commit()
                        conn.close()
                        bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∞",
                                         reply_markup=elementmarkup_reg)
                    else:
                        bot.send_message(chat_id, "–¢–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤",
                                         reply_markup=elementmarkup_unreg)
                elif text == "–ü—Ä–æ –Ω–∞—Å":
                    bot.send_message(chat_id,
                                     "–ê—Ä—Ç-–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è ELEMENT\n\n–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ "
                                     "—à–æ—É –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –∞–Ω–∏–º–∞—Ü–∏—è –Ω–∞ –ª—é–±–æ–µ —Ç–æ—Ä–∂–µ—Å—Ç–≤–æ. "
                                     "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ, —è—Ä–∫–∏–µ, –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–µ—Å—è!\n\nüî•    "
                                     "–û–≥–Ω–µ–Ω–Ω–æ–µ —à–æ—É\nüí°    –°–≤–µ—Ç–æ–¥–∏–æ–¥–Ω–æ–µ —à–æ—É\n ‚ö°Ô∏è   –≠–ª–µ–∫—Ç—Ä–∏—á"
                                     "–µ—Å–∫–æ–µ —à–æ—É\n üí®   –®–æ—É –í–µ—Ç—Ä–∞\n üî¶   –ü—Ä–æ–µ–∫—Ü–∏–æ–Ω–Ω–æ–µ —à–æ—É\nüö®    –ü–∏–∫—Å–µ–ª"
                                     "—å–Ω–æ–µ —à–æ—É\nüéÄ    –®–æ—É –≥–∏–º–Ω–∞—Å—Ç–æ–∫\nüîÆ    –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –∂–æ–Ω–≥–ª–∏—Ä–æ–≤–∞–Ω–∏–µ\nüé™    –•–æ–¥—É–ª–∏"
                                     "—Å—Ç—ã, –º–∏–º—ã, –∂–æ–Ω–≥–ª–µ—Ä—ã, –ª–µ–¥–∏-—Ñ—É—Ä—à–µ—Ç, –∂–∏–≤—ã–µ —Å—Ç–∞—Ç—É–∏",
                                     reply_markup=elementmarkup_soc)


bot.polling()
